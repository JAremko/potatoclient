{:paths ["src" "resources" "target/classes"]
 
 :deps {org.clojure/clojure {:mvn/version "1.11.1"}
        ;; Command-line argument parsing
        org.clojure/tools.cli {:mvn/version "1.0.219"}
        ;; JSON support for potential JSON output
        org.clojure/data.json {:mvn/version "2.4.0"}
        ;; Pronto for protobuf handling (using JAremko's fork via git)
        com.appsflyer/pronto {:git/url "https://github.com/JAremko/pronto.git"
                              :git/sha "0fb034bc9c943d6a04177b23eb97436f9ca817f7"}
        ;; Logging
        org.clojure/tools.logging {:mvn/version "1.2.4"}
        ch.qos.logback/logback-classic {:mvn/version "1.4.11"}
        ;; Protocol Buffers runtime
        com.google.protobuf/protobuf-java {:mvn/version "4.29.2"}
        ;; Buf validate for protobuf validation
        build.buf/protovalidate {:mvn/version "0.3.2"}
        ;; Pretty-printing for EDN
        zprint/zprint {:mvn/version "1.2.8"}
        ;; NIO2 for file system testing
        com.google.jimfs/jimfs {:mvn/version "1.3.0"}}
 
 :aliases
 {:run {:main-opts ["-m" "validate.core"]}
  
  :test {:extra-paths ["test"]
         :extra-deps {io.github.cognitect-labs/test-runner 
                      {:git/tag "v0.5.1" :git/sha "dfb30dd"}}
         :main-opts ["-m" "cognitect.test-runner"
                     "-d" "test"]}
  
  :repl {:extra-deps {nrepl/nrepl {:mvn/version "1.0.0"}
                      cider/cider-nrepl {:mvn/version "0.28.5"}}
         :main-opts ["-m" "nrepl.cmdline"
                     "--middleware" "[cider.nrepl/cider-middleware]"]}
  
  :build {:deps {io.github.clojure/tools.build {:mvn/version "0.10.6"}}
          :ns-default build}}}
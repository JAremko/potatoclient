{:paths ["src" "resources"]
 
 :deps {org.clojure/clojure {:mvn/version "1.11.1"}
        
        ;; Protobuf support
        com.appsflyer/pronto {:mvn/version "2.1.2"}
        com.google.protobuf/protobuf-java {:mvn/version "4.31.1"}
        
        ;; Parsing
        instaparse/instaparse {:mvn/version "1.4.12"}
        
        ;; Fuzzy search
        clj-fuzzy/clj-fuzzy {:mvn/version "0.4.1"}
        
        ;; Utilities
        org.clojure/tools.cli {:mvn/version "1.0.219"}
        org.clojure/data.json {:mvn/version "2.4.0"}
        medley/medley {:mvn/version "1.4.0"}
        cheshire/cheshire {:mvn/version "5.12.0"}
        
        ;; Specs and validation
        metosin/malli {:mvn/version "0.13.0"}
        
        ;; Pattern matching
        org.clojure/core.match {:mvn/version "1.0.1"}
        
        ;; Protobuf validation
        build.buf/protovalidate {:mvn/version "0.1.8"}
        org.apache.commons/commons-lang3 {:mvn/version "3.14.0"}}
 
 :aliases
 {:repl
  {:extra-deps {nrepl/nrepl {:mvn/version "1.1.0"}
                cider/cider-nrepl {:mvn/version "0.45.0"}
                com.bhauman/rebel-readline {:mvn/version "0.1.4"}}
   :main-opts ["-m" "nrepl.cmdline"
               "--middleware" "[cider.nrepl/cider-middleware]"
               "--interactive"
               "-f" "rebel-readline.main/-main"]}
  
  :nrepl
  {:extra-deps {nrepl/nrepl {:mvn/version "1.1.0"}
                cider/cider-nrepl {:mvn/version "0.45.0"}}
   :main-opts ["-m" "nrepl.cmdline"
               "--middleware" "[cider.nrepl/cider-middleware]"
               "--bind" "127.0.0.1"
               "--port" "7889"]}
  
  :test
  {:extra-paths ["test" "../../shared/specs/protobuf" "../../shared/specs/custom"]
   :extra-deps {io.github.cognitect-labs/test-runner {:git/url "https://github.com/cognitect-labs/test-runner"
                                                       :git/sha "9e35c979860c75555adaff7600070c60004a0f44"}}
   :main-opts ["-m" "cognitect.test-runner"]}
  
  :test:unit
  {:inherit [:test]
   :main-opts ["-m" "cognitect.test-runner" "-d" "test/unit"]}
  
  :test:integration
  {:inherit [:test :test-protos]
   :main-opts ["-m" "cognitect.test-runner" "-d" "test/integration"]}
  
  :test:watch
  {:extra-paths ["test"]
   :extra-deps {com.jakemccrary/test-refresh {:mvn/version "0.25.0"}}
   :main-opts ["-m" "com.jakemccrary.test-refresh"]}
  
  :run
  {:extra-paths ["../../shared/specs/protobuf" "../../shared/specs/custom"]
   :main-opts ["-m" "proto-explorer.main"]}
  
  :mcp
  {:extra-deps {org.slf4j/slf4j-nop {:mvn/version "2.0.16"}
                com.bhauman/clojure-mcp {:git/url "https://github.com/bhauman/clojure-mcp.git"
                                         :git/tag "v0.1.7-alpha"
                                         :git/sha "992fe5d"}}
   :exec-fn clojure-mcp.main/start-mcp-server
   :exec-args {:port 7889}}
  
  :fmt
  {:extra-deps {cljfmt/cljfmt {:mvn/version "0.9.2"}}
   :main-opts ["-m" "cljfmt.main"]}
  
  :outdated
  {:extra-deps {com.github.liquidz/antq {:mvn/version "2.7.1133"}}
   :main-opts ["-m" "antq.core"]}
  
  :bench
  {:extra-paths ["bench"]
   :extra-deps {criterium/criterium {:mvn/version "0.4.6"}}
   :main-opts ["-m" "proto-explorer.bench"]}
  
  :profile
  {:jvm-opts ["-Djdk.attach.allowAttachSelf=true"
              "-XX:+UnlockDiagnosticVMOptions"
              "-XX:+DebugNonSafepoints"]
   :extra-deps {com.clojure-goes-fast/clj-async-profiler {:mvn/version "1.0.5"}}}
  
  :codox
  {:extra-deps {codox/codox {:mvn/version "0.10.8"}}
   :exec-fn codox.main/generate-docs
   :exec-args {:output-path "docs/api"
               :source-paths ["src"]
               :doc-paths ["doc"]
               :name "Proto Explorer"
               :version "0.1.0"}}
  
  :examples
  {:main-opts ["-m" "proto-explorer.examples"]}
  
  :test-protos
  {:extra-paths ["../../target/classes"
                 "../../src/potatoclient/java"]}
  
  :quick
  {:inherit [:test]
   :main-opts ["-m" "cognitect.test-runner" "-i" "integration|slow"]}
  
  :profile:flamegraph
  {:inherit [:profile]
   :main-opts ["-m" "proto-explorer.profiling"]}
  
  :build
  {:extra-paths ["."]
   :deps {io.github.clojure/tools.build {:git/tag "v0.10.5" :git/sha "2a21b7a"}}
   :ns-default build}}}
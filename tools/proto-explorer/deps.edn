{:paths ["src" "resources"]
 
 :deps {org.clojure/clojure {:mvn/version "1.12.2"}
        ;; Shared project with proto classes
        potatoclient/shared {:local/root "../../shared"}
        
        ;; Protobuf support
        com.appsflyer/pronto {:git/url "https://github.com/JAremko/pronto.git"
                              :git/sha "5444ae5ec3b567a5565e6c1e90ba0850960331b6"}
        com.google.protobuf/protobuf-java {:mvn/version "4.32.0"}
        com.google.protobuf/protobuf-java-util {:mvn/version "4.32.0"}
        
        ;; Parsing
        instaparse/instaparse {:mvn/version "1.5.0"}
        
        ;; Fuzzy search
        clj-fuzzy/clj-fuzzy {:mvn/version "0.4.1"}
        
        ;; Utilities
        org.clojure/tools.cli {:mvn/version "1.1.230"}
        org.clojure/data.json {:mvn/version "2.5.1"}
        medley/medley {:mvn/version "1.4.0"}
        cheshire/cheshire {:mvn/version "6.0.0"}
        
        ;; Specs and validation
        metosin/malli {:mvn/version "0.19.1"}
        
        ;; Pattern matching
        org.clojure/core.match {:mvn/version "1.1.0"}
        
        ;; Protobuf validation
        build.buf/protovalidate {:mvn/version "0.13.0"}
        org.apache.commons/commons-lang3 {:mvn/version "3.18.0"}}
 
 :aliases
 {:repl
  {:extra-deps {nrepl/nrepl {:mvn/version "1.3.1"}
                cider/cider-nrepl {:mvn/version "0.57.0"}
                com.bhauman/rebel-readline {:mvn/version "0.1.5"}}
   :main-opts ["-m" "nrepl.cmdline"
               "--middleware" "[cider.nrepl/cider-middleware]"
               "--interactive"
               "-f" "rebel-readline.main/-main"]}
  
  :nrepl
  {:extra-deps {nrepl/nrepl {:mvn/version "1.3.1"}
                cider/cider-nrepl {:mvn/version "0.57.0"}}
   :main-opts ["-m" "nrepl.cmdline"
               "--middleware" "[cider.nrepl/cider-middleware]"
               "--bind" "127.0.0.1"
               "--port" "7889"]}
  
  :test
  {:extra-paths ["test" "../../shared/specs/protobuf" "../../shared/specs/custom"]
   :extra-deps {io.github.cognitect-labs/test-runner {:git/url "https://github.com/cognitect-labs/test-runner"
                                                       :git/sha "3f288f1f16d167723ad87cc35b1dfee3c1681e10"}}
   :main-opts ["-m" "cognitect.test-runner"]}
  
  :test:unit
  {:inherit [:test]
   :main-opts ["-m" "cognitect.test-runner" "-d" "test/unit"]}
  
  :test:integration
  {:inherit [:test]
   :main-opts ["-m" "cognitect.test-runner" "-d" "test/integration"]}
  
  :test:watch
  {:extra-paths ["test"]
   :extra-deps {com.jakemccrary/test-refresh {:mvn/version "0.26.0"}}
   :main-opts ["-m" "com.jakemccrary.test-refresh"]}
  
  :run
  {:extra-paths ["../../shared/specs/protobuf" "../../shared/specs/custom"]
   :main-opts ["-m" "proto-explorer.main"]}
  
  :mcp
  {:extra-deps {org.slf4j/slf4j-nop {:mvn/version "2.0.17"}
                com.bhauman/clojure-mcp {:git/url "https://github.com/bhauman/clojure-mcp.git"
                                         :git/tag "v0.1.8-alpha"
                                         :git/sha "776dff4"}}
   :exec-fn clojure-mcp.main/start-mcp-server
   :exec-args {:port 7889}}
  
  :fmt
  {:extra-deps {cljfmt/cljfmt {:mvn/version "0.9.2"}}
   :main-opts ["-m" "cljfmt.main"]}
  
  :zprint
  {:extra-deps {zprint/zprint {:mvn/version "1.3.0"}}
   :main-opts ["-m" "zprint.main"]}
  
  :outdated
  {:extra-deps {com.github.liquidz/antq {:mvn/version "2.11.1276"}}
   :main-opts ["-m" "antq.core"]}
  
  :outdated-upgrade
  {:extra-deps {com.github.liquidz/antq {:mvn/version "2.11.1276"}}
   :main-opts ["-m" "antq.core" "--upgrade"]}
  
  :bench
  {:extra-paths ["bench"]
   :extra-deps {criterium/criterium {:mvn/version "0.4.6"}}
   :main-opts ["-m" "proto-explorer.bench"]}
  
  :profile
  {:jvm-opts ["-Djdk.attach.allowAttachSelf=true"
              "-XX:+UnlockDiagnosticVMOptions"
              "-XX:+DebugNonSafepoints"]
   :extra-deps {com.clojure-goes-fast/clj-async-profiler {:mvn/version "1.6.2"}}}
  
  :codox
  {:extra-deps {codox/codox {:mvn/version "0.10.8"}}
   :exec-fn codox.main/generate-docs
   :exec-args {:output-path "docs/api"
               :source-paths ["src"]
               :doc-paths ["doc"]
               :name "Proto Explorer"
               :version "0.1.0"}}
  
  :examples
  {:main-opts ["-m" "proto-explorer.examples"]}
  
  ;; Proto classes now come from potatoclient/shared dependency
  
  :quick
  {:inherit [:test]
   :main-opts ["-m" "cognitect.test-runner" "-i" "integration|slow"]}
  
  :profile:flamegraph
  {:inherit [:profile]
   :main-opts ["-m" "proto-explorer.profiling"]}
  
  :build
  {:extra-paths ["."]
   :deps {io.github.clojure/tools.build {:git/tag "v0.10.10" :git/sha "deedd62"}}
   :ns-default build}}}

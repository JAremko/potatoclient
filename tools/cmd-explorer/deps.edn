{:paths ["src" "scripts" "resources" "target/classes"
         ;; Add Pronto's Java source for compilation
         "~/.gitlibs/libs/com.appsflyer/pronto/0fb034bc9c943d6a04177b23eb97436f9ca817f7/src/java"]
 
 :deps {org.clojure/clojure {:mvn/version "1.12.0"}
        ;; Parser for TypeScript function extraction
        instaparse/instaparse {:mvn/version "1.5.0"}
        ;; Markdown manipulation
        markdown-clj/markdown-clj {:mvn/version "1.12.2"}
        ;; File utilities
        org.clojure/tools.cli {:mvn/version "1.1.230"}
        ;; Logging
        org.clojure/tools.logging {:mvn/version "1.3.0"}
        ch.qos.logback/logback-classic {:mvn/version "1.5.15"}
        
        ;; Protobuf and Pronto (using JAremko's fork via git)
        com.appsflyer/pronto {:git/url "https://github.com/JAremko/pronto.git"
                              :git/sha "0fb034bc9c943d6a04177b23eb97436f9ca817f7"}
        com.google.protobuf/protobuf-java {:mvn/version "4.31.1"}
        com.google.protobuf/protobuf-java-util {:mvn/version "4.31.1"}
        ;; Buf validate for generated code
        build.buf/protovalidate {:mvn/version "0.3.2"}
        
        ;; Malli for specs and validation
        metosin/malli {:mvn/version "0.19.1"}
        
        ;; Guardrails for runtime validation
        com.fulcrologic/guardrails {:mvn/version "1.2.9"}
        
        ;; HTTP client for WebSocket
        hato/hato {:mvn/version "1.0.0"}
        
        ;; Generative testing
        org.clojure/test.check {:mvn/version "1.1.1"}
        
        ;; WebSocket client
        stylefruits/gniazdo {:mvn/version "1.2.2"}}
 
 :aliases
 {:extract {:main-opts ["-m" "cmd-explorer.extract-ts"]}
  
  :test {:extra-paths ["test"]
         :extra-deps {io.github.cognitect-labs/test-runner 
                      {:git/tag "v0.5.1" :git/sha "dfb30dd"}}
         :main-opts ["-m" "cognitect.test-runner"
                     "-d" "test"]}
  
  :repl {:extra-deps {nrepl/nrepl {:mvn/version "1.0.0"}
                      cider/cider-nrepl {:mvn/version "0.28.5"}}
         :main-opts ["-m" "nrepl.cmdline"
                     "--middleware" "[cider.nrepl/cider-middleware]"]}
  
  :build {:deps {io.github.clojure/tools.build {:mvn/version "0.10.6"}}
          :ns-default build}}}
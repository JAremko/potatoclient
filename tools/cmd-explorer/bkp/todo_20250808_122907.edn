{:generated-at "2025-08-08T12:29:07.226482430",
 :total-functions 174,
 :modules 11,
 :phases
 ({:phase 4,
   :module "cmdDayCamera",
   :title "Day Camera Commands",
   :functions
   [{:name "day-camera-set-infra-red-filter",
     :ts-name "dayCameraSetInfraRedFilter",
     :line 5,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Filter",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:5"
      "Proto-explore: cmd DayCamera.Filter"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-set-iris",
     :ts-name "dayCameraSetIris",
     :line 12,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Iris",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:12"
      "Proto-explore: cmd DayCamera.Iris"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-set-auto-iris",
     :ts-name "dayCameraSetAutoIris",
     :line 19,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Iris",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:19"
      "Proto-explore: cmd DayCamera.Iris"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-take-photo",
     :ts-name "dayCameraTakePhoto",
     :line 26,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:26"
      "Proto-explore: cmd DayCamera.Root"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-start",
     :ts-name "dayCameraStart",
     :line 37,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:37"
      "Proto-explore: cmd DayCamera.Root"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-stop",
     :ts-name "dayCameraStop",
     :line 44,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:44"
      "Proto-explore: cmd DayCamera.Root"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-set-focus",
     :ts-name "dayCameraSetFocus",
     :line 51,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Focus",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:51"
      "Proto-explore: cmd DayCamera.Focus"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-move-focus",
     :ts-name "dayCameraMoveFocus",
     :line 59,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Focus",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:59"
      "Proto-explore: cmd DayCamera.Focus"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-halt-focus",
     :ts-name "dayCameraHaltFocus",
     :line 67,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Focus",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:67"
      "Proto-explore: cmd DayCamera.Focus"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-offset-focus",
     :ts-name "dayCameraOffsetFocus",
     :line 75,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Focus",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:75"
      "Proto-explore: cmd DayCamera.Focus"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-reset-focus",
     :ts-name "dayCameraResetFocus",
     :line 83,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Focus",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:83"
      "Proto-explore: cmd DayCamera.Focus"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-save-focus-to-table",
     :ts-name "dayCameraSaveFocusToTable",
     :line 91,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Focus",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:91"
      "Proto-explore: cmd DayCamera.Focus"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-set-zoom",
     :ts-name "dayCameraSetZoom",
     :line 99,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:99"
      "Proto-explore: cmd DayCamera.Zoom"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-move-zoom",
     :ts-name "dayCameraMoveZoom",
     :line 107,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:107"
      "Proto-explore: cmd DayCamera.Zoom"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-halt-zoom",
     :ts-name "dayCameraHaltZoom",
     :line 115,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:115"
      "Proto-explore: cmd DayCamera.Zoom"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-offset-zoom",
     :ts-name "dayCameraOffsetZoom",
     :line 123,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:123"
      "Proto-explore: cmd DayCamera.Zoom"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-reset-zoom",
     :ts-name "dayCameraResetZoom",
     :line 131,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:131"
      "Proto-explore: cmd DayCamera.Zoom"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-save-zoom-to-table",
     :ts-name "dayCameraSaveZoomToTable",
     :line 139,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:139"
      "Proto-explore: cmd DayCamera.Zoom"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-set-zoom-table-value",
     :ts-name "dayCameraSetZoomTableValue",
     :line 147,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:147"
      "Proto-explore: cmd DayCamera.Zoom"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-set-digital-zoom-level",
     :ts-name "dayCameraSetDigitalZoomLevel",
     :line 155,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:155"
      "Proto-explore: cmd DayCamera.Zoom"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-next-zoom-table-pos",
     :ts-name "dayCameraNextZoomTablePos",
     :line 163,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:163"
      "Proto-explore: cmd DayCamera.Zoom"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-prev-zoom-table-pos",
     :ts-name "dayCameraPrevZoomTablePos",
     :line 171,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:171"
      "Proto-explore: cmd DayCamera.Zoom"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "get-meteo",
     :ts-name "getMeteo",
     :line 179,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:179"
      "Proto-explore: cmd DayCamera.Root"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-fx-mode",
     :ts-name "setFxMode",
     :line 186,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:186"
      "Proto-explore: cmd DayCamera.Root"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "next-fx-mode",
     :ts-name "nextFxMode",
     :line 193,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:193"
      "Proto-explore: cmd DayCamera.Root"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "prev-fx-mode",
     :ts-name "prevFxMode",
     :line 200,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:200"
      "Proto-explore: cmd DayCamera.Root"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-clahe-level",
     :ts-name "setClaheLevel",
     :line 207,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:207"
      "Proto-explore: cmd DayCamera.Root"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "shift-clahe-level",
     :ts-name "shiftClaheLevel",
     :line 214,
     :file "cmdSender/cmdDayCamera.ts",
     :proto-msg "DayCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdDayCamera.ts:214"
      "Proto-explore: cmd DayCamera.Root"
      "Proto-explore: cmd DayCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}]}
  {:phase 5,
   :module "cmdHeatCamera",
   :title "Heat Camera Commands",
   :functions
   [{:name "heat-camera-take-photo",
     :ts-name "heatCameraTakePhoto",
     :line 5,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:5"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-set-agc",
     :ts-name "heatCameraSetAgc",
     :line 16,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:16"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-set-filter",
     :ts-name "heatCameraSetFilter",
     :line 23,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Filter",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:23"
      "Proto-explore: cmd HeatCamera.Filter"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-set-zoom-table-value",
     :ts-name "heatCameraSetZoomTableValue",
     :line 30,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:30"
      "Proto-explore: cmd HeatCamera.Zoom"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-set-digital-zoom-level",
     :ts-name "heatCameraSetDigitalZoomLevel",
     :line 38,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:38"
      "Proto-explore: cmd HeatCamera.Zoom"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "string-to-heat-camera-agc-mode",
     :ts-name "stringToHeatCameraAgcMode",
     :line 45,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:45"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "string-to-heat-camera-filter",
     :ts-name "stringToHeatCameraFilter",
     :line 58,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Filter",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:58"
      "Proto-explore: cmd HeatCamera.Filter"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-calibrate",
     :ts-name "heatCameraCalibrate",
     :line 71,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:71"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-start",
     :ts-name "heatCameraStart",
     :line 78,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:78"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-stop",
     :ts-name "heatCameraStop",
     :line 85,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:85"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-zoom-in",
     :ts-name "heatCameraZoomIn",
     :line 92,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:92"
      "Proto-explore: cmd HeatCamera.Zoom"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-zoom-out",
     :ts-name "heatCameraZoomOut",
     :line 99,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:99"
      "Proto-explore: cmd HeatCamera.Zoom"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-zoom-stop",
     :ts-name "heatCameraZoomStop",
     :line 106,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:106"
      "Proto-explore: cmd HeatCamera.Zoom"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-set-auto-focus-on",
     :ts-name "heatCameraSetAutoFocusOn",
     :line 120,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Focus",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:120"
      "Proto-explore: cmd HeatCamera.Focus"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-set-auto-focus-off",
     :ts-name "heatCameraSetAutoFocusOff",
     :line 125,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Focus",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:125"
      "Proto-explore: cmd HeatCamera.Focus"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-focus-stop",
     :ts-name "heatCameraFocusStop",
     :line 130,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Focus",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:130"
      "Proto-explore: cmd HeatCamera.Focus"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-focus-in",
     :ts-name "heatCameraFocusIn",
     :line 137,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Focus",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:137"
      "Proto-explore: cmd HeatCamera.Focus"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-focus-out",
     :ts-name "heatCameraFocusOut",
     :line 144,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Focus",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:144"
      "Proto-explore: cmd HeatCamera.Focus"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-focus-step-plus",
     :ts-name "heatCameraFocusStepPLus",
     :line 151,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Focus",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:151"
      "Proto-explore: cmd HeatCamera.Focus"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-focus-step-minus",
     :ts-name "heatCameraFocusStepMinus",
     :line 158,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Focus",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:158"
      "Proto-explore: cmd HeatCamera.Focus"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-next-zoom-table-pos",
     :ts-name "heatCameraNextZoomTablePos",
     :line 165,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:165"
      "Proto-explore: cmd HeatCamera.Zoom"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-prev-zoom-table-pos",
     :ts-name "heatCameraPrevZoomTablePos",
     :line 173,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:173"
      "Proto-explore: cmd HeatCamera.Zoom"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-reset-zoom",
     :ts-name "heatCameraResetZoom",
     :line 181,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:181"
      "Proto-explore: cmd HeatCamera.Zoom"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "heat-camera-save-zoom-to-table",
     :ts-name "heatCameraSaveZoomToTable",
     :line 188,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Zoom",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:188"
      "Proto-explore: cmd HeatCamera.Zoom"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "get-meteo",
     :ts-name "getMeteo",
     :line 195,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:195"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "enable-dde",
     :ts-name "enableDDE",
     :line 202,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:202"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "disable-dde",
     :ts-name "disableDDE",
     :line 209,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:209"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-dde-level",
     :ts-name "setDDELevel",
     :line 216,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:216"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "shift-dde-level",
     :ts-name "shiftDDELevel",
     :line 223,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:223"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-fx-mode",
     :ts-name "setFxMode",
     :line 230,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:230"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "next-fx-mode",
     :ts-name "nextFxMode",
     :line 237,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:237"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "prev-fx-mode",
     :ts-name "prevFxMode",
     :line 244,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:244"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-clahe-level",
     :ts-name "setClaheLevel",
     :line 251,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:251"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "shift-clahe-level",
     :ts-name "shiftClaheLevel",
     :line 258,
     :file "cmdSender/cmdHeatCamera.ts",
     :proto-msg "HeatCamera.Root",
     :tasks
     ["Read TS source at cmdSender/cmdHeatCamera.ts:258"
      "Proto-explore: cmd HeatCamera.Root"
      "Proto-explore: cmd HeatCamera.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}]}
  {:phase 6,
   :module "cmdRotary",
   :title "Rotary Commands",
   :functions
   [{:name "rotary-start",
     :ts-name "rotaryStart",
     :line 5,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:5"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-stop",
     :ts-name "rotaryStop",
     :line 12,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:12"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-halt",
     :ts-name "rotaryHalt",
     :line 19,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:19"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-set-platform-azimuth",
     :ts-name "rotarySetPlatformAzimuth",
     :line 26,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:26"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-set-platform-elevation",
     :ts-name "rotarySetPlatformElevation",
     :line 33,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:33"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-set-platform-bank",
     :ts-name "rotarySetPlatformBank",
     :line 40,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:40"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-halt-azimuth",
     :ts-name "rotaryHaltAzimuth",
     :line 47,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:47"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-halt-elevation",
     :ts-name "rotaryHaltElevation",
     :line 55,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:55"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-halt-elevation-and-azimuth",
     :ts-name "rotaryHaltElevationAndAzimuth",
     :line 63,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:63"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-azimuth-set-value",
     :ts-name "rotaryAzimuthSetValue",
     :line 77,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:77"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-azimuth-rotate-to",
     :ts-name "rotaryAzimuthRotateTo",
     :line 85,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:85"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-azimuth-rotate-relative",
     :ts-name "rotaryAzimuthRotateRelative",
     :line 97,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:97"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-elevation-rotate-relative",
     :ts-name "rotaryElevationRotateRelative",
     :line 109,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:109"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-elevation-rotate-relative-set",
     :ts-name "rotaryElevationRotateRelativeSet",
     :line 121,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:121"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-azimuth-rotate-relative-set",
     :ts-name "rotaryAzimuthRotateRelativeSet",
     :line 132,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:132"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-azimuth-rotate",
     :ts-name "rotaryAzimuthRotate",
     :line 143,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:143"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-elevation-rotate",
     :ts-name "rotaryElevationRotate",
     :line 151,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:151"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-elevation-set-value",
     :ts-name "rotaryElevationSetValue",
     :line 159,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:159"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotary-elevation-rotate-to",
     :ts-name "rotaryElevationRotateTo",
     :line 167,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:167"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotate-both-to",
     :ts-name "rotateBothTo",
     :line 178,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:178"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotate-both",
     :ts-name "rotateBoth",
     :line 200,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:200"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotate-both-relative",
     :ts-name "rotateBothRelative",
     :line 220,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:220"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotate-both-relative-set",
     :ts-name "rotateBothRelativeSet",
     :line 243,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:243"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-both-to",
     :ts-name "setBothTo",
     :line 264,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:264"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-calculate-base-position-from-compass",
     :ts-name "setCalculateBasePositionFromCompass",
     :line 281,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Position",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:281"
      "Proto-explore: cmd RotaryPlatform.Position"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "get-meteo",
     :ts-name "getMeteo",
     :line 288,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:288"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-rotate-to-gps",
     :ts-name "setRotateToGps",
     :line 295,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:295"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-origin-gps",
     :ts-name "setOriginGps",
     :line 307,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:307"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "string-to-rotary-mode",
     :ts-name "stringToRotaryMode",
     :line 319,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:319"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-rotary-mode",
     :ts-name "setRotaryMode",
     :line 338,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:338"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "string-to-rotary-direction",
     :ts-name "stringToRotaryDirection",
     :line 345,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:345"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "rotate-to-ndc",
     :ts-name "RotateToNDC",
     :line 357,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:357"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "scan-start",
     :ts-name "scanStart",
     :line 369,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:369"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "scan-prev",
     :ts-name "scanPrev",
     :line 376,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:376"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "scan-next",
     :ts-name "scanNext",
     :line 383,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:383"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "scan-stop",
     :ts-name "scanStop",
     :line 390,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:390"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "scan-pause",
     :ts-name "scanPause",
     :line 397,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:397"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "scan-unpause",
     :ts-name "scanUnpause",
     :line 404,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:404"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "scan-refresh-node-list",
     :ts-name "scanRefreshNodeList",
     :line 412,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:412"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "scan-select-node",
     :ts-name "scanSelectNode",
     :line 419,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:419"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "scan-delete-node",
     :ts-name "scanDeleteNode",
     :line 426,
     :file "cmdSender/cmdRotary.ts",
     :proto-msg "RotaryPlatform.Root",
     :tasks
     ["Read TS source at cmdSender/cmdRotary.ts:426"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Proto-explore: cmd RotaryPlatform.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}]}
  {:phase 7,
   :module "cmdLRF",
   :title "LRF Commands",
   :functions
   [{:name "lrf-start",
     :ts-name "lrfStart",
     :line 5,
     :file "cmdSender/cmdLRF.ts",
     :proto-msg "Lrf.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRF.ts:5"
      "Proto-explore: cmd Lrf.Root"
      "Proto-explore: cmd Lrf.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-stop",
     :ts-name "lrfStop",
     :line 12,
     :file "cmdSender/cmdLRF.ts",
     :proto-msg "Lrf.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRF.ts:12"
      "Proto-explore: cmd Lrf.Root"
      "Proto-explore: cmd Lrf.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-new-session",
     :ts-name "lrfNewSession",
     :line 19,
     :file "cmdSender/cmdLRF.ts",
     :proto-msg "Lrf.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRF.ts:19"
      "Proto-explore: cmd Lrf.Root"
      "Proto-explore: cmd Lrf.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-scan-on",
     :ts-name "lrfScanOn",
     :line 26,
     :file "cmdSender/cmdLRF.ts",
     :proto-msg "Lrf.Scan",
     :tasks
     ["Read TS source at cmdSender/cmdLRF.ts:26"
      "Proto-explore: cmd Lrf.Scan"
      "Proto-explore: cmd Lrf.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "refine-on",
     :ts-name "refineOn",
     :line 33,
     :file "cmdSender/cmdLRF.ts",
     :proto-msg "Lrf.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRF.ts:33"
      "Proto-explore: cmd Lrf.Root"
      "Proto-explore: cmd Lrf.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "refine-off",
     :ts-name "refineOff",
     :line 40,
     :file "cmdSender/cmdLRF.ts",
     :proto-msg "Lrf.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRF.ts:40"
      "Proto-explore: cmd Lrf.Root"
      "Proto-explore: cmd Lrf.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-scan-off",
     :ts-name "lrfScanOff",
     :line 47,
     :file "cmdSender/cmdLRF.ts",
     :proto-msg "Lrf.Scan",
     :tasks
     ["Read TS source at cmdSender/cmdLRF.ts:47"
      "Proto-explore: cmd Lrf.Scan"
      "Proto-explore: cmd Lrf.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-measure",
     :ts-name "lrfMeasure",
     :line 54,
     :file "cmdSender/cmdLRF.ts",
     :proto-msg "Lrf.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRF.ts:54"
      "Proto-explore: cmd Lrf.Root"
      "Proto-explore: cmd Lrf.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-enable-fog-mode",
     :ts-name "lrfEnableFogMode",
     :line 69,
     :file "cmdSender/cmdLRF.ts",
     :proto-msg "Lrf.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRF.ts:69"
      "Proto-explore: cmd Lrf.Root"
      "Proto-explore: cmd Lrf.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-disable-fog-mode",
     :ts-name "lrfDisableFogMode",
     :line 76,
     :file "cmdSender/cmdLRF.ts",
     :proto-msg "Lrf.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRF.ts:76"
      "Proto-explore: cmd Lrf.Root"
      "Proto-explore: cmd Lrf.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-target-designator-off",
     :ts-name "lrfTargetDesignatorOff",
     :line 83,
     :file "cmdSender/cmdLRF.ts",
     :proto-msg "Lrf.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRF.ts:83"
      "Proto-explore: cmd Lrf.Root"
      "Proto-explore: cmd Lrf.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-target-designator-on-mode-a",
     :ts-name "lrfTargetDesignatorOnModeA",
     :line 90,
     :file "cmdSender/cmdLRF.ts",
     :proto-msg "Lrf.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRF.ts:90"
      "Proto-explore: cmd Lrf.Root"
      "Proto-explore: cmd Lrf.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-target-designator-on-mode-b",
     :ts-name "lrfTargetDesignatorOnModeB",
     :line 97,
     :file "cmdSender/cmdLRF.ts",
     :proto-msg "Lrf.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRF.ts:97"
      "Proto-explore: cmd Lrf.Root"
      "Proto-explore: cmd Lrf.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "get-meteo",
     :ts-name "getMeteo",
     :line 104,
     :file "cmdSender/cmdLRF.ts",
     :proto-msg "Lrf.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRF.ts:104"
      "Proto-explore: cmd Lrf.Root"
      "Proto-explore: cmd Lrf.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}]}
  {:phase 8,
   :module "cmdCompass",
   :title "Compass Commands",
   :functions
   [{:name "compass-start",
     :ts-name "compassStart",
     :line 4,
     :file "cmdSender/cmdCompass.ts",
     :proto-msg "Compass.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCompass.ts:4"
      "Proto-explore: cmd Compass.Root"
      "Proto-explore: cmd Compass.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "get-meteo",
     :ts-name "getMeteo",
     :line 11,
     :file "cmdSender/cmdCompass.ts",
     :proto-msg "Compass.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCompass.ts:11"
      "Proto-explore: cmd Compass.Root"
      "Proto-explore: cmd Compass.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "compass-stop",
     :ts-name "compassStop",
     :line 19,
     :file "cmdSender/cmdCompass.ts",
     :proto-msg "Compass.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCompass.ts:19"
      "Proto-explore: cmd Compass.Root"
      "Proto-explore: cmd Compass.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-magnetic-declination",
     :ts-name "setMagneticDeclination",
     :line 26,
     :file "cmdSender/cmdCompass.ts",
     :proto-msg "Compass.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCompass.ts:26"
      "Proto-explore: cmd Compass.Root"
      "Proto-explore: cmd Compass.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-offset-angle-azimuth",
     :ts-name "setOffsetAngleAzimuth",
     :line 33,
     :file "cmdSender/cmdCompass.ts",
     :proto-msg "Compass.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCompass.ts:33"
      "Proto-explore: cmd Compass.Root"
      "Proto-explore: cmd Compass.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-offset-angle-elevation",
     :ts-name "setOffsetAngleElevation",
     :line 40,
     :file "cmdSender/cmdCompass.ts",
     :proto-msg "Compass.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCompass.ts:40"
      "Proto-explore: cmd Compass.Root"
      "Proto-explore: cmd Compass.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "calibrate-long-start",
     :ts-name "calibrateLongStart",
     :line 47,
     :file "cmdSender/cmdCompass.ts",
     :proto-msg "Compass.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCompass.ts:47"
      "Proto-explore: cmd Compass.Root"
      "Proto-explore: cmd Compass.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "calibrate-short-start",
     :ts-name "calibrateShortStart",
     :line 54,
     :file "cmdSender/cmdCompass.ts",
     :proto-msg "Compass.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCompass.ts:54"
      "Proto-explore: cmd Compass.Root"
      "Proto-explore: cmd Compass.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "calibrate-next",
     :ts-name "calibrateNext",
     :line 61,
     :file "cmdSender/cmdCompass.ts",
     :proto-msg "Compass.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCompass.ts:61"
      "Proto-explore: cmd Compass.Root"
      "Proto-explore: cmd Compass.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "calibrate-cancel",
     :ts-name "calibrateCancel",
     :line 68,
     :file "cmdSender/cmdCompass.ts",
     :proto-msg "Compass.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCompass.ts:68"
      "Proto-explore: cmd Compass.Root"
      "Proto-explore: cmd Compass.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-use-rotary-position",
     :ts-name "setUseRotaryPosition",
     :line 75,
     :file "cmdSender/cmdCompass.ts",
     :proto-msg "Compass.Position",
     :tasks
     ["Read TS source at cmdSender/cmdCompass.ts:75"
      "Proto-explore: cmd Compass.Position"
      "Proto-explore: cmd Compass.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}]}
  {:phase 9,
   :module "cmdGps",
   :title "Gps Commands",
   :functions
   [{:name "gps-start",
     :ts-name "gpsStart",
     :line 4,
     :file "cmdSender/cmdGps.ts",
     :proto-msg "Gps.Root",
     :tasks
     ["Read TS source at cmdSender/cmdGps.ts:4"
      "Proto-explore: cmd Gps.Root"
      "Proto-explore: cmd Gps.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "gps-stop",
     :ts-name "gpsStop",
     :line 11,
     :file "cmdSender/cmdGps.ts",
     :proto-msg "Gps.Root",
     :tasks
     ["Read TS source at cmdSender/cmdGps.ts:11"
      "Proto-explore: cmd Gps.Root"
      "Proto-explore: cmd Gps.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-manual-position",
     :ts-name "setManualPosition",
     :line 18,
     :file "cmdSender/cmdGps.ts",
     :proto-msg "Gps.Position",
     :tasks
     ["Read TS source at cmdSender/cmdGps.ts:18"
      "Proto-explore: cmd Gps.Position"
      "Proto-explore: cmd Gps.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "set-use-manual-position",
     :ts-name "setUseManualPosition",
     :line 30,
     :file "cmdSender/cmdGps.ts",
     :proto-msg "Gps.Position",
     :tasks
     ["Read TS source at cmdSender/cmdGps.ts:30"
      "Proto-explore: cmd Gps.Position"
      "Proto-explore: cmd Gps.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "get-meteo",
     :ts-name "getMeteo",
     :line 38,
     :file "cmdSender/cmdGps.ts",
     :proto-msg "Gps.Root",
     :tasks
     ["Read TS source at cmdSender/cmdGps.ts:38"
      "Proto-explore: cmd Gps.Root"
      "Proto-explore: cmd Gps.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}]}
  {:phase 10,
   :module "cmdSystem",
   :title "System Commands",
   :functions
   [{:name "system-reboot",
     :ts-name "SystemReboot",
     :line 5,
     :file "cmdSender/cmdSystem.ts",
     :proto-msg "System.Root",
     :tasks
     ["Read TS source at cmdSender/cmdSystem.ts:5"
      "Proto-explore: cmd System.Root"
      "Proto-explore: cmd System.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "system-power-off",
     :ts-name "SystemPowerOff",
     :line 12,
     :file "cmdSender/cmdSystem.ts",
     :proto-msg "System.Root",
     :tasks
     ["Read TS source at cmdSender/cmdSystem.ts:12"
      "Proto-explore: cmd System.Root"
      "Proto-explore: cmd System.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "system-reset-configs",
     :ts-name "SystemResetConfigs",
     :line 19,
     :file "cmdSender/cmdSystem.ts",
     :proto-msg "System.Root",
     :tasks
     ["Read TS source at cmdSender/cmdSystem.ts:19"
      "Proto-explore: cmd System.Root"
      "Proto-explore: cmd System.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "system-start-all",
     :ts-name "SystemStartAll",
     :line 26,
     :file "cmdSender/cmdSystem.ts",
     :proto-msg "System.Root",
     :tasks
     ["Read TS source at cmdSender/cmdSystem.ts:26"
      "Proto-explore: cmd System.Root"
      "Proto-explore: cmd System.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "system-stop-all",
     :ts-name "SystemStopAll",
     :line 33,
     :file "cmdSender/cmdSystem.ts",
     :proto-msg "System.Root",
     :tasks
     ["Read TS source at cmdSender/cmdSystem.ts:33"
      "Proto-explore: cmd System.Root"
      "Proto-explore: cmd System.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "system-mark-rec-important",
     :ts-name "SystemMarkRecImportant",
     :line 40,
     :file "cmdSender/cmdSystem.ts",
     :proto-msg "System.Root",
     :tasks
     ["Read TS source at cmdSender/cmdSystem.ts:40"
      "Proto-explore: cmd System.Root"
      "Proto-explore: cmd System.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "system-unmark-rec-important",
     :ts-name "SystemUnmarkRecImportant",
     :line 47,
     :file "cmdSender/cmdSystem.ts",
     :proto-msg "System.Root",
     :tasks
     ["Read TS source at cmdSender/cmdSystem.ts:47"
      "Proto-explore: cmd System.Root"
      "Proto-explore: cmd System.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "system-set-localization",
     :ts-name "SystemSetLocalization",
     :line 54,
     :file "cmdSender/cmdSystem.ts",
     :proto-msg "System.Root",
     :tasks
     ["Read TS source at cmdSender/cmdSystem.ts:54"
      "Proto-explore: cmd System.Root"
      "Proto-explore: cmd System.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "system-enter-transport",
     :ts-name "SystemEnterTransport",
     :line 61,
     :file "cmdSender/cmdSystem.ts",
     :proto-msg "System.Root",
     :tasks
     ["Read TS source at cmdSender/cmdSystem.ts:61"
      "Proto-explore: cmd System.Root"
      "Proto-explore: cmd System.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "system-enable-geodesic-mode",
     :ts-name "SystemEnableGeodesicMode",
     :line 68,
     :file "cmdSender/cmdSystem.ts",
     :proto-msg "System.Root",
     :tasks
     ["Read TS source at cmdSender/cmdSystem.ts:68"
      "Proto-explore: cmd System.Root"
      "Proto-explore: cmd System.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "system-disable-geodesic-mode",
     :ts-name "SystemDisableGeodesicMode",
     :line 75,
     :file "cmdSender/cmdSystem.ts",
     :proto-msg "System.Root",
     :tasks
     ["Read TS source at cmdSender/cmdSystem.ts:75"
      "Proto-explore: cmd System.Root"
      "Proto-explore: cmd System.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}]}
  {:phase 11,
   :module "cmdOSD",
   :title "OSD Commands",
   :functions
   [{:name "osd-show-default-screen",
     :ts-name "OSDShowDefaultScreen",
     :line 5,
     :file "cmdSender/cmdOSD.ts",
     :proto-msg "OSD.Root",
     :tasks
     ["Read TS source at cmdSender/cmdOSD.ts:5"
      "Proto-explore: cmd OSD.Root"
      "Proto-explore: cmd OSD.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "osd-show-lrf-measure-screen",
     :ts-name "OSDShowLRFMeasureScreen",
     :line 12,
     :file "cmdSender/cmdOSD.ts",
     :proto-msg "OSD.Root",
     :tasks
     ["Read TS source at cmdSender/cmdOSD.ts:12"
      "Proto-explore: cmd OSD.Root"
      "Proto-explore: cmd OSD.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "osd-show-lrf-result-screen",
     :ts-name "OSDShowLRFResultScreen",
     :line 19,
     :file "cmdSender/cmdOSD.ts",
     :proto-msg "OSD.Root",
     :tasks
     ["Read TS source at cmdSender/cmdOSD.ts:19"
      "Proto-explore: cmd OSD.Root"
      "Proto-explore: cmd OSD.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "osd-show-lrf-result-simplified-screen",
     :ts-name "OSDShowLRFResultSimplifiedScreen",
     :line 26,
     :file "cmdSender/cmdOSD.ts",
     :proto-msg "OSD.Root",
     :tasks
     ["Read TS source at cmdSender/cmdOSD.ts:26"
      "Proto-explore: cmd OSD.Root"
      "Proto-explore: cmd OSD.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "osd-disable-day-osd",
     :ts-name "OSDDisableDayOSD",
     :line 33,
     :file "cmdSender/cmdOSD.ts",
     :proto-msg "OSD.Root",
     :tasks
     ["Read TS source at cmdSender/cmdOSD.ts:33"
      "Proto-explore: cmd OSD.Root"
      "Proto-explore: cmd OSD.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "osd-disable-heat-osd",
     :ts-name "OSDDisableHeatOSD",
     :line 40,
     :file "cmdSender/cmdOSD.ts",
     :proto-msg "OSD.Root",
     :tasks
     ["Read TS source at cmdSender/cmdOSD.ts:40"
      "Proto-explore: cmd OSD.Root"
      "Proto-explore: cmd OSD.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "osd-enable-day-osd",
     :ts-name "OSDEnableDayOSD",
     :line 47,
     :file "cmdSender/cmdOSD.ts",
     :proto-msg "OSD.Root",
     :tasks
     ["Read TS source at cmdSender/cmdOSD.ts:47"
      "Proto-explore: cmd OSD.Root"
      "Proto-explore: cmd OSD.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "osd-enable-heat-osd",
     :ts-name "OSDEnableHeatOSD",
     :line 54,
     :file "cmdSender/cmdOSD.ts",
     :proto-msg "OSD.Root",
     :tasks
     ["Read TS source at cmdSender/cmdOSD.ts:54"
      "Proto-explore: cmd OSD.Root"
      "Proto-explore: cmd OSD.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}]}
  {:phase 12,
   :module "cmdCamDayGlassHeater",
   :title "Cam Day Glass Heater Commands",
   :functions
   [{:name "day-camera-glass-heater-start",
     :ts-name "dayCameraGlassHeaterStart",
     :line 4,
     :file "cmdSender/cmdCamDayGlassHeater.ts",
     :proto-msg "DayCamGlassHeater.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCamDayGlassHeater.ts:4"
      "Proto-explore: cmd DayCamGlassHeater.Root"
      "Proto-explore: cmd DayCamGlassHeater.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-glass-heater-stop",
     :ts-name "dayCameraGlassHeaterStop",
     :line 12,
     :file "cmdSender/cmdCamDayGlassHeater.ts",
     :proto-msg "DayCamGlassHeater.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCamDayGlassHeater.ts:12"
      "Proto-explore: cmd DayCamGlassHeater.Root"
      "Proto-explore: cmd DayCamGlassHeater.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-glass-heater-turn-on",
     :ts-name "dayCameraGlassHeaterTurnOn",
     :line 20,
     :file "cmdSender/cmdCamDayGlassHeater.ts",
     :proto-msg "DayCamGlassHeater.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCamDayGlassHeater.ts:20"
      "Proto-explore: cmd DayCamGlassHeater.Root"
      "Proto-explore: cmd DayCamGlassHeater.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-glass-heater-turn-off",
     :ts-name "dayCameraGlassHeaterTurnOff",
     :line 28,
     :file "cmdSender/cmdCamDayGlassHeater.ts",
     :proto-msg "DayCamGlassHeater.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCamDayGlassHeater.ts:28"
      "Proto-explore: cmd DayCamGlassHeater.Root"
      "Proto-explore: cmd DayCamGlassHeater.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "day-camera-glass-heater-get-meteo",
     :ts-name "dayCameraGlassHeaterGetMeteo",
     :line 36,
     :file "cmdSender/cmdCamDayGlassHeater.ts",
     :proto-msg "DayCamGlassHeater.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCamDayGlassHeater.ts:36"
      "Proto-explore: cmd DayCamGlassHeater.Root"
      "Proto-explore: cmd DayCamGlassHeater.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}]}
  {:phase 13,
   :module "cmdCV",
   :title "CV Commands",
   :functions
   [{:name "cv-start-track-ndc",
     :ts-name "CVStartTrackNDC",
     :line 7,
     :file "cmdSender/cmdCV.ts",
     :proto-msg "CV.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCV.ts:7"
      "Proto-explore: cmd CV.Root"
      "Proto-explore: cmd CV.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "cv-stop-track",
     :ts-name "CVStopTrack",
     :line 80,
     :file "cmdSender/cmdCV.ts",
     :proto-msg "CV.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCV.ts:80"
      "Proto-explore: cmd CV.Root"
      "Proto-explore: cmd CV.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "cv-set-auto-focus",
     :ts-name "CVSetAutoFocus",
     :line 87,
     :file "cmdSender/cmdCV.ts",
     :proto-msg "CV.Focus",
     :tasks
     ["Read TS source at cmdSender/cmdCV.ts:87"
      "Proto-explore: cmd CV.Focus"
      "Proto-explore: cmd CV.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "cv-enable-vampire-mode",
     :ts-name "CVEnableVampireMode",
     :line 94,
     :file "cmdSender/cmdCV.ts",
     :proto-msg "CV.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCV.ts:94"
      "Proto-explore: cmd CV.Root"
      "Proto-explore: cmd CV.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "cv-disable-vampire-mode",
     :ts-name "CVDisableVampireMode",
     :line 101,
     :file "cmdSender/cmdCV.ts",
     :proto-msg "CV.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCV.ts:101"
      "Proto-explore: cmd CV.Root"
      "Proto-explore: cmd CV.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "cv-enable-stabilization-mode",
     :ts-name "CVEnableStabilizationMode",
     :line 108,
     :file "cmdSender/cmdCV.ts",
     :proto-msg "CV.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCV.ts:108"
      "Proto-explore: cmd CV.Root"
      "Proto-explore: cmd CV.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "cv-disable-stabilization-mode",
     :ts-name "CVDisableStabilizationMode",
     :line 115,
     :file "cmdSender/cmdCV.ts",
     :proto-msg "CV.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCV.ts:115"
      "Proto-explore: cmd CV.Root"
      "Proto-explore: cmd CV.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "cv-dump-start",
     :ts-name "CVDumpStart",
     :line 122,
     :file "cmdSender/cmdCV.ts",
     :proto-msg "CV.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCV.ts:122"
      "Proto-explore: cmd CV.Root"
      "Proto-explore: cmd CV.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "cv-dump-stop",
     :ts-name "CVDumpStop",
     :line 129,
     :file "cmdSender/cmdCV.ts",
     :proto-msg "CV.Root",
     :tasks
     ["Read TS source at cmdSender/cmdCV.ts:129"
      "Proto-explore: cmd CV.Root"
      "Proto-explore: cmd CV.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}]}
  {:phase 14,
   :module "cmdLRFAlignment",
   :title "LRFAlignment Commands",
   :functions
   [{:name "lrf-calib-set-day-offsets",
     :ts-name "lrfCalibSetDayOffsets",
     :line 4,
     :file "cmdSender/cmdLRFAlignment.ts",
     :proto-msg "Lrf_calib.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRFAlignment.ts:4"
      "Proto-explore: cmd Lrf_calib.Root"
      "Proto-explore: cmd Lrf_calib.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-calib-set-heat-offsets",
     :ts-name "lrfCalibSetHeatOffsets",
     :line 14,
     :file "cmdSender/cmdLRFAlignment.ts",
     :proto-msg "Lrf_calib.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRFAlignment.ts:14"
      "Proto-explore: cmd Lrf_calib.Root"
      "Proto-explore: cmd Lrf_calib.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-calib-shift-day-offsets",
     :ts-name "lrfCalibShiftDayOffsets",
     :line 24,
     :file "cmdSender/cmdLRFAlignment.ts",
     :proto-msg "Lrf_calib.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRFAlignment.ts:24"
      "Proto-explore: cmd Lrf_calib.Root"
      "Proto-explore: cmd Lrf_calib.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-calib-shift-heat-offsets",
     :ts-name "lrfCalibShiftHeatOffsets",
     :line 34,
     :file "cmdSender/cmdLRFAlignment.ts",
     :proto-msg "Lrf_calib.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRFAlignment.ts:34"
      "Proto-explore: cmd Lrf_calib.Root"
      "Proto-explore: cmd Lrf_calib.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-calib-save-day-offsets",
     :ts-name "lrfCalibSaveDayOffsets",
     :line 44,
     :file "cmdSender/cmdLRFAlignment.ts",
     :proto-msg "Lrf_calib.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRFAlignment.ts:44"
      "Proto-explore: cmd Lrf_calib.Root"
      "Proto-explore: cmd Lrf_calib.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-calib-save-heat-offsets",
     :ts-name "lrfCalibSaveHeatOffsets",
     :line 54,
     :file "cmdSender/cmdLRFAlignment.ts",
     :proto-msg "Lrf_calib.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRFAlignment.ts:54"
      "Proto-explore: cmd Lrf_calib.Root"
      "Proto-explore: cmd Lrf_calib.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-calib-reset-day-offsets",
     :ts-name "lrfCalibResetDayOffsets",
     :line 64,
     :file "cmdSender/cmdLRFAlignment.ts",
     :proto-msg "Lrf_calib.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRFAlignment.ts:64"
      "Proto-explore: cmd Lrf_calib.Root"
      "Proto-explore: cmd Lrf_calib.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}
    {:name "lrf-calib-reset-heat-offsets",
     :ts-name "lrfCalibResetHeatOffsets",
     :line 74,
     :file "cmdSender/cmdLRFAlignment.ts",
     :proto-msg "Lrf_calib.Root",
     :tasks
     ["Read TS source at cmdSender/cmdLRFAlignment.ts:74"
      "Proto-explore: cmd Lrf_calib.Root"
      "Proto-explore: cmd Lrf_calib.Root"
      "Document constraints from buf.validate"
      "Define Malli spec with generators"
      "Implement guardrailed function"
      "Add unit tests (positive, negative, boundary)"
      "Add generative tests (300+ runs)"
      "Test with mock server"
      "Verify binary compatibility"]}]})}

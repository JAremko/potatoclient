{:namespaces
 {taoensso.telemere
  {:vars
   {handler:console {:arities [:varargs]}
    format-signal-fn {:arities [:varargs]}
    add-handler! {:arities [:varargs]}
    remove-handler! {:arities [:varargs]}
    set-min-level! {:arities [:varargs]}
    set-ns-filter! {:arities [:varargs]}
    stop-handlers! {:arities [:varargs]}
    log! {:arities [:varargs]}
    event! {:arities [:varargs]}}}

  clojure.string
  {:vars
   {blank? {:arities [1]}
    capitalize {:arities [1]}
    ends-with? {:arities [2]}
    includes? {:arities [2]}
    join {:arities [1 2]}
    lower-case {:arities [1]}
    replace {:arities [3]}
    split {:arities [2 3]}
    starts-with? {:arities [2]}
    trim {:arities [1]}
    upper-case {:arities [1]}}}

  clojure.java.io
  {:vars
   {file {:arities [:varargs]}
    resource {:arities [1]}
    writer {:arities [:varargs]}
    reader {:arities [:varargs]}
    as-file {:arities [1]}
    as-url {:arities [1]}
    delete-file {:arities [1 2]}
    make-parents {:arities [:varargs]}}}

  seesaw.core
  {:vars
   {select {:arities [:varargs]}
    invoke-now {:arities [:varargs]}
    invoke-later {:arities [:varargs]}
    alert {:arities [:varargs]}
    pack! {:arities [1]}
    show! {:arities [1]}
    hide! {:arities [1]}
    dispose! {:arities [1]}
    config! {:arities [:varargs]}
    listen {:arities [:varargs]}
    value {:arities [1]}
    value! {:arities [2]}
    to-root {:arities [1]}
    to-widget {:arities [1]}}}}}